summarise(sales = median(sales_rel)) %>%
ggplot(aes(state_id, sales, fill = event_type_1)) +
geom_col(position = "dodge") +
coord_flip() + mytheme+
# theme_hc() +
theme(legend.position = "right", axis.title.x = element_text(size = 10)) +
labs(x = "", y = "Median Relative Sales", fill = "Type")
layout <- '
AAAAAA
AAAAAA
AAAAAA
BBBCCD
BBBCCD
'
p1 + p2 + p3 + guide_area() + plot_layout(design = layout, guides = 'collect')
p1 + p2 + p3 + guide_area() + plot_layout(design = layout, guides = 'collect')
foo <- train %>%
group_by(state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
rename(id = state_id) %>%
extract_ts() %>%
rename(state_id = id) %>%
left_join(calendar %>% select(date, event_type_1), by = c("dates" = "date")) %>%
filter(!str_detect(as.character(dates), "-12-25")) %>%
group_by(state_id) %>%
mutate(loess = predict(loess(sales ~ as.integer(dates - min(dates)) + 1, span = 1/2, degree = 1)),
mean_sales = mean(sales)) %>%
mutate(sales_rel = (sales - loess)/mean_sales) %>%
mutate(is_event = !is.na(event_type_1)) %>%
ungroup()
p1 <- foo %>%
ggplot(aes(dates, sales/1e3, group = is_event, col = is_event)) +
geom_line(aes(dates, loess/1e3), col = "black", linetype = 2) +
geom_line(alpha = 0.3) +
geom_smooth(method = "loess", formula = 'y ~ x', span = 2/3, se = FALSE) +
# scale_colour_manual(values = c("grey70", "red")) +
facet_wrap(~ state_id, scales = "free") +
mytheme +
theme(legend.position = "right") +
labs(x = "", y = "Sales ($1,000)", col = "Event", title = "Sales per State during special events vs non-events")
p2 <- foo %>%
ggplot(aes(state_id, sales_rel, fill = is_event)) +
geom_boxplot() +
coord_flip() +
#scale_fill_manual(values = c("grey70", "red")) +
mytheme +
theme(legend.position = "none", axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10)) +
labs(x = "", y = "Relative Sales", fill = "event")
p3 <- foo %>%
filter(is_event == TRUE) %>%
group_by(state_id, event_type_1) %>%
summarise(sales = median(sales_rel)) %>%
ggplot(aes(state_id, sales, fill = event_type_1)) +
geom_col(position = "dodge") +
coord_flip() + mytheme+
# theme_hc() +
theme(legend.position = "right", axis.title.x = element_text(size = 10)) +
labs(x = "", y = "Median Relative Sales", fill = "Type")
layout <- '
AAAAAA
AAAAAA
AAAAAA
BBBCCD
BBBCCD
'
p1 + p2 + p3 + guide_area() + plot_layout(design = layout, guides = 'collect')
p1 + p2 + p3 + guide_area() + plot_layout(design = layout, guides = 'collect')
# sum by cat + state, pivoting dates
foo <- train %>%
group_by(cat_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
# sum by cat + state, pivoting dates
foo <- train %>%
group_by(cat_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
# sum by cat + state, pivoting dates
foo <- train %>%
group_by(cat_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
foo <- train %>%
group_by(cat_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
# sum by cat + state, pivoting dates
min_date <- date("2011-01-29")
foo <- train %>%
group_by(cat_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
# fit loess and subtract
bar <- foo %>%
filter(!str_detect(as.character(dates), "-12-25")) %>%
group_by(cat_id, state_id) %>%
mutate(loess = predict(loess(sales ~ as.integer(dates - min(dates)) + 1, span = 2/3, degree = 1)),
mean_sales = mean(sales)) %>%
mutate(sales_rel = (sales - loess)/mean_sales)
# bar %>%
#   ggplot(aes(dates, sales, col = cat_id)) +
#   geom_line() +
#   geom_line(aes(dates, loess), col = "black") +
#   facet_grid(cat_id ~ state_id) +
#   theme_tufte() +
#   theme(legend.position = "none") +
#   labs(x = "", y = "Sales", title = "Sales per State with Seasonalities")
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(wday, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs(x = "", y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p2 <- bar %>%
mutate(month = month(dates, label = TRUE)) %>%
group_by(cat_id, state_id, month) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(month, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
theme_tufte() +
facet_wrap(~cat_id, scales = "free_y", nrow = 3) +
theme(legend.position = "none") +
labs(x = "", y = "Relative Sales", title = "Monthly Seasonality by Category & State", col = "State")
layout <- "
AABBB
"
p1 + p2 + plot_layout(design = layout)
p1 + p2 + plot_layout(design = layout)
p1
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(wday, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs( y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p1
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(wday, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
# theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs( y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p1
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(wday, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
# theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs(x=day, y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p1
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(wday, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
# theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs(x=wday, y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p1
wday
ggthemr_reset()
# sum by cat + state, pivoting dates
foo <- train %>%
group_by(cat_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
# fit loess and subtract
bar <- foo %>%
filter(!str_detect(as.character(dates), "-12-25")) %>%
group_by(cat_id, state_id) %>%
mutate(loess = predict(loess(sales ~ as.integer(dates - min(dates)) + 1, span = 2/3, degree = 1)),
mean_sales = mean(sales)) %>%
mutate(sales_rel = (sales - loess)/mean_sales)
# bar %>%
#   ggplot(aes(dates, sales, col = cat_id)) +
#   geom_line() +
#   geom_line(aes(dates, loess), col = "black") +
#   facet_grid(cat_id ~ state_id) +
#   theme_tufte() +
#   theme(legend.position = "none") +
#   labs(x = "", y = "Sales", title = "Sales per State with Seasonalities")
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(wday, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs(x = "", y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p2 <- bar %>%
mutate(month = month(dates, label = TRUE)) %>%
group_by(cat_id, state_id, month) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(month, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
theme_tufte() +
facet_wrap(~cat_id, scales = "free_y", nrow = 3) +
theme(legend.position = "none") +
labs(x = "", y = "Relative Sales", title = "Monthly Seasonality by Category & State", col = "State")
layout <- "
AABBB
"
p1 + p2 + plot_layout(design = layout)
p1 + p2 + plot_layout(design = layout)
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(1:7, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs(x = "", y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p1
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(wday, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs(x = "", y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p1
bar %>%
ggplot(aes(dates, sales, col = cat_id)) +
geom_line() +
geom_line(aes(dates, loess), col = "black") +
facet_grid(cat_id ~ state_id) +
theme_tufte() +
theme(legend.position = "none") +
labs(x = "", y = "Sales", title = "Sales per State with Seasonalities")
labs(x = "", y = "Sales", title = "Sales per State with Seasonalities")
bar %>%
ggplot(aes(dates, sales, col = cat_id)) +
geom_line() +
geom_line(aes(dates, loess), col = "black") +
facet_grid(cat_id ~ state_id) +
theme_tufte() +
theme(legend.position = "none") +
labs(x = "", y = "Sales", title = "Sales per State with Seasonalities")
p1 <- bar %>%
ungroup() %>%
mutate(wday = wday(dates, label = TRUE, week_start = 1)) %>%
group_by(cat_id, state_id, wday) %>%
summarise(sales = sum(sales_rel)) %>%
unite(col = id, ends_with("id"), remove = FALSE) %>%
ggplot(aes(wday, sales, group = id, col = state_id)) +
geom_line(size = 1.5) +
theme_tufte() +
facet_wrap(~cat_id, scales = "free", nrow = 3) +
theme(legend.position = "top") +
labs(x = "", y = "Relative Sales", title = "Weekly Seasonality and", col = "State")
p1
min_date <- date("2011-01-29")
foo <- train %>%
group_by(dept_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
theme_tufte() +
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
foo <- train %>%
group_by(dept_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
p1 = foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
theme_tufte() +
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
p1
ggthemer("flat")
ggthemr("flat")
p1
p1 = foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
theme_tufte() +
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
p1
p1 = foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
mytheme() +
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
p1 = foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
mytheme +
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
p1
min_date <- date("2011-01-29")
foo <- train %>%
group_by(dept_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
p1 = foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
mytheme + theme_tufte()
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
min_date <- date("2011-01-29")
foo <- train %>%
group_by(dept_id, state_id) %>%
summarise_at(vars(starts_with("d_")), sum) %>%
ungroup() %>%
select(ends_with("id"), starts_with("d_")) %>%
pivot_longer(starts_with("d_"), names_to = "dates", values_to = "sales") %>%
mutate(dates = as.integer(str_remove(dates, "d_"))) %>%
mutate(dates = min_date + dates - 1)
p1 = foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
mytheme + theme_tufte() +
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
p1
p1 = foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
theme_tufte() + mytheme
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
p1 = foo %>%
mutate(month = month(dates),
year = year(dates)) %>%
group_by(month, year, dept_id, state_id) %>%
summarise(sales = sum(sales),
dates = min(dates)) %>%
ungroup() %>%
filter(str_detect(as.character(dates), "..-..-01")) %>%
filter(dates != max(dates)) %>%
ggplot(aes(dates, sales, col = dept_id)) +
geom_line() +
facet_grid(state_id ~ dept_id) +
theme_tufte() + mytheme+
theme(legend.position = "none", strip.text.x = element_text(size = 8)) +
labs(title = "Sales per Department and State", x = "Date", y = "Sales")
p1
read_csv("feature tested.csv")
a = read_csv("feature tested.csv")
a = read_csv("feature tested.csv")
a = read_csv("feature tested.csv")
plot(a$Features,a$Scores)
library(readr)
feature_tested <- read_csv("feature tested.csv",
col_types = cols(Features = col_character()))
View(feature_tested)
feature_tested
ggplot(feature_tested,aes(Features,Scores))
ggplot(feature_tested,aes(Features,Scores))+geom_bar()
ggplot(feature_tested,aes(x=Features,y=Scores))+geom_bar()
plot(feature_tested$Features,feature_tested$Scores,"l")
ggplot(feature_tested,aes(x=Features,y=Scores))+geom_bar()
